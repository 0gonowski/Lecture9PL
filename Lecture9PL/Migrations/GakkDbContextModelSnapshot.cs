// <auto-generated />
using System;
using Lecture9PL.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lecture9PL.Migrations
{
    [DbContext(typeof(GakkDbContext))]
    partial class GakkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lecture9PL.Models.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudent"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdStudentGroup")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdStudent");

                    b.HasIndex("IdStudentGroup");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            IdStudent = 1,
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@gmail.com",
                            FirstName = "John",
                            IdStudentGroup = 1,
                            LastName = "Doe"
                        },
                        new
                        {
                            IdStudent = 2,
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.doe@gmail.com",
                            FirstName = "Jane",
                            IdStudentGroup = 3,
                            LastName = "Dose"
                        },
                        new
                        {
                            IdStudent = 3,
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johne.dosse@gmail.com",
                            FirstName = "Johne",
                            IdStudentGroup = 3,
                            LastName = "Dosse"
                        });
                });

            modelBuilder.Entity("Lecture9PL.Models.StudentGroup", b =>
                {
                    b.Property<int>("IdStudentGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudentGroup"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStudentGroup");

                    b.ToTable("StudentGroups");

                    b.HasData(
                        new
                        {
                            IdStudentGroup = 1,
                            Name = "Computer Science A"
                        },
                        new
                        {
                            IdStudentGroup = 2,
                            Name = "Computer Science B"
                        },
                        new
                        {
                            IdStudentGroup = 3,
                            Name = "Computer Science C"
                        });
                });

            modelBuilder.Entity("Lecture9PL.Models.Student", b =>
                {
                    b.HasOne("Lecture9PL.Models.StudentGroup", "StudentGroup")
                        .WithMany("Students")
                        .HasForeignKey("IdStudentGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("Lecture9PL.Models.StudentGroup", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
